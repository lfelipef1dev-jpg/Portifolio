# üöÄ Configura√ß√£o Autom√°tica Completa
# Execute: .\configurar-automatico.ps1

Write-Host "üöÄ Configura√ß√£o Autom√°tica do Portf√≥lio" -ForegroundColor Cyan
Write-Host "======================================" -ForegroundColor Cyan
Write-Host ""

$env:Path += ";C:\Program Files\Git\cmd"
cd "C:\Users\lfeli\Desktop\Portifolio"

Write-Host "üìã Status atual:" -ForegroundColor Yellow
git status
Write-Host ""

Write-Host "üîç Verificando remote..." -ForegroundColor Yellow
$remote = git remote -v 2>&1
if ($remote -match "origin") {
    Write-Host "‚ö†Ô∏è  Remote j√° configurado:" -ForegroundColor Yellow
    git remote -v
    Write-Host ""
    $manter = Read-Host "Deseja reconfigurar? (S/N)"
    if ($manter -eq "S" -or $manter -eq "s") {
        git remote remove origin
    } else {
        Write-Host "‚úÖ Mantendo remote atual" -ForegroundColor Green
        exit 0
    }
}

Write-Host ""
Write-Host "üì¶ Configurar Conex√£o com GitHub" -ForegroundColor Cyan
Write-Host "================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚ö†Ô∏è  IMPORTANTE: Crie o reposit√≥rio no GitHub primeiro!" -ForegroundColor Yellow
Write-Host ""
Write-Host "1. Acesse: https://github.com/new" -ForegroundColor White
Write-Host "2. Crie um reposit√≥rio com nome desejado (ex: Portifolio)" -ForegroundColor White
Write-Host "3. Marque como PUBLIC" -ForegroundColor White
Write-Host '4. NAO marque nenhuma opcao (README, .gitignore, license)' -ForegroundColor White
Write-Host "5. Clique 'Create repository'" -ForegroundColor White
Write-Host ""

$githubUser = Read-Host "Digite seu usu√°rio do GitHub (ou Enter para 'lfelipef1dev-jpg')"
if ([string]::IsNullOrWhiteSpace($githubUser)) {
    $githubUser = "lfelipef1dev-jpg"
}

$repoName = Read-Host "Digite o nome do reposit√≥rio que criou no GitHub"

if ([string]::IsNullOrWhiteSpace($repoName)) {
    Write-Host ""
    Write-Host "‚ùå Nome do reposit√≥rio √© obrigat√≥rio!" -ForegroundColor Red
    exit 1
}

$repoUrl = "https://github.com/$githubUser/$repoName.git"
Write-Host ""
Write-Host "üîó URL: $repoUrl" -ForegroundColor Cyan
Write-Host ""

# Verificar se reposit√≥rio existe
Write-Host "üîç Verificando se reposit√≥rio existe..." -ForegroundColor Yellow
$testConnection = git ls-remote $repoUrl 2>&1
if ($testConnection -match "fatal" -or $testConnection -match "not found") {
    Write-Host "‚ö†Ô∏è  Reposit√≥rio n√£o encontrado ou n√£o acess√≠vel" -ForegroundColor Yellow
    Write-Host "Verifique se:" -ForegroundColor Yellow
    Write-Host "- O reposit√≥rio foi criado no GitHub" -ForegroundColor White
    Write-Host "- O nome est√° correto" -ForegroundColor White
    Write-Host "- O reposit√≥rio √© PUBLIC ou voc√™ tem acesso" -ForegroundColor White
    Write-Host ""
    $continuar = Read-Host "Deseja continuar mesmo assim? (S/N)"
    if ($continuar -ne "S" -and $continuar -ne "s") {
        exit 1
    }
} else {
    Write-Host "‚úÖ Reposit√≥rio encontrado!" -ForegroundColor Green
}

Write-Host ""
Write-Host "üîß Configurando remote..." -ForegroundColor Yellow
git remote add origin $repoUrl
Write-Host "‚úÖ Remote configurado!" -ForegroundColor Green

Write-Host ""
Write-Host "üì§ Verificando mudan√ßas pendentes..." -ForegroundColor Yellow
git add . 2>$null
$status = git status --porcelain
if ($status) {
    Write-Host "üíæ Fazendo commit das mudan√ßas..." -ForegroundColor Yellow
    git commit -m "Configura√ß√£o inicial limpa do portf√≥lio"
} else {
    Write-Host "‚úÖ Nenhuma mudan√ßa para commitar" -ForegroundColor Green
}

Write-Host ""
Write-Host "‚¨ÜÔ∏è  Enviando para o GitHub..." -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è  Voc√™ pode ser solicitado a fazer login/autorizar" -ForegroundColor Yellow
Write-Host ""

git push -u origin main

if ($LASTEXITCODE -eq 0) {
    Write-Host ""
    Write-Host "‚úÖ SUCESSO! C√≥digo enviado para o GitHub!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üåê Pr√≥ximos passos:" -ForegroundColor Cyan
    Write-Host "1. Acesse: https://github.com/$githubUser/$repoName" -ForegroundColor White
    Write-Host "2. Configure Cloudflare Pages (veja CONFIGURAR_PROJETO_NOVO.md)" -ForegroundColor White
    Write-Host ""
    Write-Host "üîó Abrir Cloudflare Pages..." -ForegroundColor Yellow
    Start-Sleep -Seconds 2
    Start-Process "https://dash.cloudflare.com/pages"
    Write-Host ""
    Write-Host "‚ú® Configure o Cloudflare conectando com o GitHub!" -ForegroundColor Green
} else {
    Write-Host ""
    Write-Host "‚ùå Erro ao fazer push" -ForegroundColor Red
    Write-Host "Poss√≠veis causas:" -ForegroundColor Yellow
    Write-Host "- Reposit√≥rio n√£o existe no GitHub" -ForegroundColor White
    Write-Host "- Problema de autentica√ß√£o" -ForegroundColor White
    Write-Host "- Reposit√≥rio n√£o √© p√∫blico e voc√™ n√£o tem acesso" -ForegroundColor White
    Write-Host ""
    Write-Host "üí° Dica: Crie o reposit√≥rio primeiro em: https://github.com/new" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "Script finalizado!" -ForegroundColor Cyan

